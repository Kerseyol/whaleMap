{"version":3,"sources":["images/whale.svg","images/ship.svg","images/humpback.svg","images/orca.svg","images/graywhale.svg","images/dolphin.svg","images/pacificdolphin.svg","images/harborporpoise.svg","images/harborseal.svg","images/northernseal.svg","images/seaotter.svg","MapApp.js","icons.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MapApp","props","state","map","hasLocation","setLocation","center","species","blurb","popupCheck","bind","this","sighting","description","dispose","Map","zoom","latlng","TileLayer","url","Marker","position","icon","Popup","className","React","Component","shipIcon","L","Icon","iconUrl","whale","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","ship","humpbackIcon","humpback","orcaIcon","orca","graywhaleIcon","graywhale","dolphinIcon","dolphin","pacificdolphinIcon","pacificdolphin","harborporpoiseIcon","harborporpoise","harborsealIcon","harborseal","northernsealIcon","northernseal","seaotterIcon","seaotter","App","lat","lng","popup","createRef","handleClickEvent","abridgeLat","abridgeLng","setIcon","scrollMap","scrollBack","Number","parseFloat","toFixed","current","leafletElement","options","leaflet","closePopup","document","getElementById","scrollTop","scrollIntoView","behavior","block","inline","e","preventDefault","target","id","axios","get","then","res","data","setState","latitude","longitude","push","onClick","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf02290b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whale.a1ce04da.svg\";","module.exports = __webpack_public_path__ + \"static/media/ship.d91067c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/humpback.e1f67d62.svg\";","module.exports = __webpack_public_path__ + \"static/media/orca.b5c2987b.svg\";","module.exports = __webpack_public_path__ + \"static/media/graywhale.0f7b3e68.svg\";","module.exports = __webpack_public_path__ + \"static/media/dolphin.64142b6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pacificdolphin.37851ba7.svg\";","module.exports = __webpack_public_path__ + \"static/media/harborporpoise.a95f0de3.svg\";","module.exports = __webpack_public_path__ + \"static/media/harborseal.d8fa608f.svg\";","module.exports = __webpack_public_path__ + \"static/media/northernseal.e589b51b.svg\";","module.exports = __webpack_public_path__ + \"static/media/seaotter.5e33a589.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { transformWithProjections } from 'ol/proj';\r\n\r\nclass MapApp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasLocation: {},\r\n            setLocation: [],\r\n            center: this.props.center,\r\n            species: this.props.species,\r\n            blurb: \"\"\r\n            }\r\n        this.popupCheck = this.popupCheck.bind(this);\r\n        \r\n    }\r\n\r\n    state = {\r\n        // The map instance to use during cleanup\r\n        map: null\r\n    };\r\n\r\n    popupCheck() {\r\n        if(this.props.hasLocation === false) {\r\n            this.state.blurb = \"Yarr, this be placeholder text until you select a button!\"\r\n        } else if(this.props.hasLocation === true) {\r\n            this.state.blurb = \"\"\r\n        }  else if(this.props.sighting.description === \"Imported by The Whale Museum.\") {\r\n            this.state.blurb = \"Yarr, nothing special was described to the hotline for this sighting.\"\r\n      }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Cleanup after the map to avoid memory leaks when this component exits the page\r\n        this.state.map.dispose();\r\n    }\r\n\r\n    render() {\r\n        this.popupCheck();\r\n        if (this.props.sighting.description === \"Imported by The Whale Museum.\") {\r\n        this.state.blurb = \"Yarr, nothing special was described to the hotline for this sighting. \"\r\n        \r\n    }\r\n    return(\r\n        <div>\r\n            <Map center={this.props.center} \r\n            zoom={this.props.zoom}\r\n            latlng={this.props.latlng}\r\n            >\r\n            <TileLayer url='https://1.base.maps.ls.hereapi.com/maptile/2.1/maptile/newest/reduced.day/{z}/{x}/{y}/512/png8?apiKey=heA-6tHpjc3ORm31QRdJjsjT6VXwmduSS2ogj5jCP8Y&ppi=320'/>\r\n            <Marker position={this.props.center} icon={this.props.icon}>\r\n                <Popup>\r\n                <div className=\"popup\">\r\n                <p>\r\n                `Captain's Log,<br />\r\n                While steering my ship through the waters of the Pacific Northwest...\r\n                <br />\r\n                {this.state.blurb}\r\n                {this.props.sighting.description} \r\n                <br />Warm Regards,<br /><br />\r\n                <span>Captain Ahab VII</span>\r\n                </p>\r\n                </div>\r\n                </Popup>\r\n            </Marker>\r\n            </Map>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapApp;\r\n","import './App.css';\r\nimport L from 'leaflet';\r\nimport whale from './images/whale.svg';\r\n// import wheel from './images/wheel.svg';\r\nimport ship from './images/ship.svg';\r\nimport humpback from './images/humpback.svg';\r\nimport orca from './images/orca.svg';\r\nimport graywhale from './images/graywhale.svg';\r\nimport dolphin from './images/dolphin.svg';\r\nimport pacificdolphin from './images/pacificdolphin.svg';\r\nimport harborporpoise from './images/harborporpoise.svg';\r\nimport harborseal from './images/harborseal.svg';\r\nimport northernseal from './images/northernseal.svg';\r\nimport seaotter from './images/seaotter.svg';\r\n\r\nexport const whaleIcon = new L.Icon({\r\n  iconUrl: whale,\r\n  iconRetinaUrl: whale,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\n// export const wheelIcon = new L.Icon({\r\n//   iconUrl: wheel,\r\n//   iconRetinaUrl: wheel,\r\n//   iconAnchor: [5, 55],\r\n//   popupAnchor: [10, -44],\r\n//   iconSize: [45, 45],\r\n// })\r\n\r\nexport const shipIcon = new L.Icon({\r\n  iconUrl: ship,\r\n  iconRetinaUrl: ship,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const humpbackIcon = new L.Icon({\r\n  iconUrl: humpback,\r\n  iconRetinaUrl: humpback,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const orcaIcon = new L.Icon({\r\n  iconUrl: orca,\r\n  iconRetinaUrl: orca,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const graywhaleIcon = new L.Icon({\r\n  iconUrl: graywhale,\r\n  iconRetinaUrl: graywhale,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const dolphinIcon = new L.Icon({\r\n  iconUrl: dolphin,\r\n  iconRetinaUrl: dolphin,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const pacificdolphinIcon = new L.Icon({\r\n  iconUrl: pacificdolphin,\r\n  iconRetinaUrl: pacificdolphin,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const harborporpoiseIcon = new L.Icon({\r\n  iconUrl: harborporpoise,\r\n  iconRetinaUrl: harborporpoise,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const harborsealIcon = new L.Icon({\r\n  iconUrl: harborseal,\r\n  iconRetinaUrl: harborseal,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const northernsealIcon = new L.Icon({\r\n  iconUrl: northernseal,\r\n  iconRetinaUrl: northernseal,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})\r\n\r\nexport const seaotterIcon = new L.Icon({\r\n  iconUrl: seaotter,\r\n  iconRetinaUrl: seaotter,\r\n  iconAnchor: [5, 55],\r\n  popupAnchor: [10, -44],\r\n  iconSize: [45, 45],\r\n})","import React from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { preventDefault } from 'ol/events/Event';\r\nimport MapApp from './MapApp';\r\nimport { shipIcon, humpbackIcon, orcaIcon, graywhaleIcon, dolphinIcon, pacificdolphinIcon, harborporpoiseIcon, harborsealIcon, northernsealIcon, seaotterIcon } from './icons';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n      this.state = {\r\n        sighting: {},\r\n        latlng: [],\r\n          lat: [],\r\n          lng: [],\r\n          species: {},\r\n        hasLocation: false,\r\n        center: [47.300000, -128.149139],\r\n        zoom: 4,\r\n        icon: shipIcon\r\n      }\r\n      this.popup = React.createRef();\r\n      this.handleClickEvent = this.handleClickEvent.bind(this);\r\n      this.abridgeLat = this.abridgeLat.bind(this);\r\n      this.abridgeLng = this.abridgeLng.bind(this);\r\n      this.setIcon = this.setIcon.bind(this);\r\n      this.scrollMap = this.scrollMap.bind(this);\r\n      this.scrollBack = this.scrollBack.bind(this);\r\n    }\r\n\r\n  abridgeLat(lat) {\r\n    return Number.parseFloat(lat).toFixed(6);\r\n  }\r\n  \r\n  abridgeLng(lng) {\r\n      return Number.parseFloat(lng).toFixed(6);\r\n  };\r\n\r\n  closePopup(){\r\n    this.popup.current.leafletElement.options.leaflet.map.closePopup();\r\n}\r\n\r\n  scrollMap() {\r\n    document.getElementById('mapdiv').scrollTop = 0\r\n  }\r\n\r\n  scrollBack() {\r\n    var buttonsTop = document.getElementById(\"buttonsID\");\r\n    buttonsTop.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\r\n  }\r\n\r\n  setIcon() {\r\n    if( this.state.species === 'humpback' ) {\r\n        this.state.icon = humpbackIcon\r\n    } else if( this.state.species === 'orca' ) {\r\n        this.state.icon = orcaIcon\r\n    } else if(this.state.species === 'gray whale') {\r\n      this.state.icon = graywhaleIcon\r\n    } else if (this.state.species === 'atlantic white-sided dolphin'){\r\n      this.state.icon = dolphinIcon\r\n    } else if(this.state.species === 'pacific white-sided dolphin'){\r\n      this.state.icon = pacificdolphinIcon\r\n    } else if(this.state.species === 'harbor porpoise') {\r\n      this.state.icon = harborporpoiseIcon\r\n    } else if(this.state.species === 'harbor seal') {\r\n      this.state.icon = harborsealIcon\r\n    } else if(this.state.species === \"northern elephant seal\") {\r\n      this.state.icon = northernsealIcon\r\n    } else if(this.state.species === 'sea otter') {\r\n      this.state.icon = seaotterIcon\r\n    } else {\r\n      this.state.icon = shipIcon\r\n    }\r\n  }\r\n\r\n  handleClickEvent(e) {\r\n    preventDefault(e);\r\n    let species = (e.target.id);\r\n    axios.get(`//hotline.whalemuseum.org/api.json?species=${species}&limit=1`)\r\n    .then((res) => {\r\n      const sighting = res.data[0];\r\n      this.setState({ \r\n        sighting: sighting,\r\n        lat: Number(this.abridgeLat(sighting.latitude)),\r\n        lng: Number(this.abridgeLng(sighting.longitude)),\r\n        hasLocation: true,\r\n        zoom: 10,\r\n        species: species,\r\n      })\r\n      this.state.latlng = [];\r\n      this.state.latlng.push(this.state.lat);\r\n      this.state.latlng.push(this.state.lng);\r\n      this.state.center = [];\r\n      this.state.center.push(this.state.lat);\r\n      this.state.center.push(this.state.lng);\r\n      let center = this.state.center\r\n      let zoom = this.state.zoom\r\n      this.setIcon();\r\n      this.setState({ center, zoom, species });\r\n      var mapElement = document.getElementById(\"mapdiv\");\r\n      mapElement.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\r\n    }); \r\n  }\r\n\r\n  render() {\r\n\r\n    let lat = Number(this.abridgeLat(this.state.lat));\r\n    let lng = Number(this.abridgeLng(this.state.lng));\r\n    let latlng = this.state.latlng;\r\n    let hasLocation = this.state.hasLocation; \r\n    let center = (this.state.center);\r\n    let zoom = this.state.zoom\r\n    let sighting = this.state.sighting\r\n    let species = this.state.species\r\n    let icon = this.state.icon\r\n\r\n    return (\r\n      <div className=\"main\">\r\n      <div className=\"titleBox\">\r\n      <div className=\"title\">\r\n        <h1>Avast, Ye Mateys! Here be a Whale Sighting App!</h1>\r\n        </div>\r\n        </div>\r\n        <div className=\"explanationContainer\">\r\n        <div className=\"ship\">\r\n        \r\n        </div>\r\n        <div className=\"explanation\">\r\n        <h2>Instructions:</h2><br/>\r\n        <h3>By selecting one of the buttons below, a call to the <span>Whale Hotline API</span> returns the most recent sighting of the selected species. <br /> This is then cross-referenced with the <span>HERE Map API</span> using the <span>React-Leaflet API.</span><br />\r\n        Then, click the icon on the map for a description of the sighting as reported to the <span>Whale Hotline!</span></h3>\r\n        </div>\r\n        </div>\r\n          <nav className=\"buttons\" id=\"buttonsID\">\r\n            <div className=\"buttonBox\">\r\n            <button className=\"humpbackButton\" onClick={this.handleClickEvent} id=\"humpback\" />\r\n            <h2>Humpback</h2> \r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"orcaButton\" onClick={this.handleClickEvent} id=\"orca\" />\r\n            <h2>Orca</h2> \r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"grayWhaleButton\" onClick={this.handleClickEvent} id=\"gray whale\" />\r\n            <h2>Gray Whale</h2> \r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"awsdButton\" onClick={this.handleClickEvent} id=\"atlantic white-sided dolphin\" /> \r\n            <h2>Atlantic White-Sided Dolphin</h2>\r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"pwsdButton\" onClick={this.handleClickEvent} id=\"pacific white-sided dolphin\" />\r\n            <h2>Pacific White-Sided Dolphin</h2> \r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"harborPorpoiseButton\" onClick={this.handleClickEvent} id=\"harbor porpoise\" /> \r\n            <h2>Harbor Porpoise</h2>\r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"harborSealButton\" onClick={this.handleClickEvent} id=\"harbor seal\" />\r\n            <h2>Harbor Seal</h2> \r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"nesButton\" onClick={this.handleClickEvent} id=\"northern elephant seal\" />\r\n            <h2>Northern Elephant Seal</h2> \r\n            </div>\r\n            <div className=\"buttonBox\">\r\n            <button className=\"seaOtterButton\" onClick={this.handleClickEvent} id=\"sea otter\" />\r\n            <h2>Sea Otter</h2>\r\n            </div>\r\n            </nav>\r\n            <div className=\"mapdiv\" id=\"mapdiv\">\r\n            <MapApp\r\n            center={center}\r\n            zoom={zoom}\r\n            lat={lat}\r\n            lng={lng}\r\n            latlng={latlng}\r\n            hasLocation={hasLocation}\r\n            sighting={sighting}\r\n            species={species}\r\n            icon={icon}\r\n            />\r\n            </div>\r\n            <button onClick={this.scrollBack} id=\"scrollBackButton\">Back to Buttons</button>\r\n            <div className=\"thanksContainer\">\r\n              <div className=\"thanks\">\r\n              <p className=\"whaleThanks\">Much thanks for the use of <span>The Whale Hotline API</span>,     documentation and site available at <a href=\"https://hotline.whalemuseum.org\">hotline.whalemuseum.    org</a></p>\r\n             <p className=\"HEREthanks\">Additionally, much thanks for the use of <span>HERE maps API</span>,    available at <a href=\"https://developer.here.com/\">https://developer.here.com/</a></p>\r\n              <p className=\"leafletThanks\">Finally, additional thanks to the <span>React Leaflet API</span> for     aiding in the use of the HERE maps API, availble at <a href=\"https://react-leaflet.js.org/\">https://react-leaflet.js.org/</a></p>\r\n              <p className=\"portfolioLink\">Also, here is a link to <a href=\"http://www.oliverkersey.com\">My Portfolio!</a></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'ol/ol.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}